// <auto-generated />
using System;
using Harfiyat_DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Harfiyat_DataAccess.Migrations
{
    [DbContext(typeof(ConsturactionContext))]
    [Migration("20250210113449_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("Harfiyat_Entities.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("ImageType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("JobId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobSummaryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Localiton")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobRequestId");

                    b.HasIndex("JobSummaryId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.JobRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JobRequests");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.JobSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalExpense")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalReceivedAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("JobSummaries");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.Image", b =>
                {
                    b.HasOne("Harfiyat_Entities.Entities.Job", "Job")
                        .WithMany("Images")
                        .HasForeignKey("JobId");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.Job", b =>
                {
                    b.HasOne("Harfiyat_Entities.Entities.JobRequest", "JobRequest")
                        .WithMany("Jobs")
                        .HasForeignKey("JobRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Harfiyat_Entities.Entities.JobSummary", "JobSummary")
                        .WithMany("Jobs")
                        .HasForeignKey("JobSummaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobRequest");

                    b.Navigation("JobSummary");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.Job", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.JobRequest", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Harfiyat_Entities.Entities.JobSummary", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
